{% extends 'dashboard/dashboard.html.twig' %}

{% block pageContent %}
    <div class="container-md">
        <div class="row">
            <div class="col-12 col-md-3">

                {% set activeItem = 'conduction' %}
                {% include 'dashboard/sidenavbar.html.twig' %}

            </div>

            <div class="col-12 col-md-9">

                <!-- Card -->
                <div class="card card-bleed shadow-light-lg mb-6">
                    <div class="card-header">

                        <div class="row align-items-center">
                            <div class="col">

                                <!-- Heading -->
                                <h4 class="mb-0">
                                    {{ 'conduction'|trans|capitalize }}
                                </h4>

                            </div>
                        </div>

                    </div>
                    <div class="card-body">
                        <form method="post" action="{{ path('app_dashboard_conduction') }}">
                            <div class="d-flex flex-row justify-content-around p-2">
                                <button value="day" name="type" class="btn btn-primary btn-xs">{{ 'day'|trans|capitalize }}</button>
                                <button value="week" name="type" class="btn btn-primary btn-xs">{{ 'week'|trans|capitalize }}</button>
                                <button value="month" name="type" class="btn btn-primary btn-xs">{{ 'month'|trans|capitalize }}</button>
                                <button value="quarter" name="type" class="btn btn-primary btn-xs">{{ 'quarter'|trans|capitalize }}</button>
                                <button value="year" name="type" class="btn btn-primary btn-xs">{{ 'year'|trans|capitalize }}</button>
                            </div>
                        </form>
                        <canvas id="myChart" width="200" height="200"></canvas>
                        <script>
                            let ctx = document.getElementById('myChart').getContext('2d');
                            let myChart = new Chart(ctx, {
                                type: 'bar',
                                data: {
                                    labels: ['{{ 'users'|trans|capitalize }}', '{{ 'organizations'|trans|capitalize }}', '{{ 'applications'|trans|capitalize }}', '{{ 'claims'|trans|capitalize }}'],
                                    datasets: [{
                                        label: '#',
                                        data: ['{{ users|length }}', '{{ organizations|length }}', '{{ applications|length }}', '{{ claims|length }}'],
                                        backgroundColor: [
                                            'rgba(255, 99, 132, 0.8)',
                                            'rgba(54, 162, 235, 0.8)',
                                            'rgba(255, 206, 86, 0.8)',
                                            'rgba(75, 192, 192, 0.8)'
                                        ],
                                        borderColor: [
                                            'rgba(255, 99, 132, 1)',
                                            'rgba(54, 162, 235, 1)',
                                            'rgba(255, 206, 86, 1)',
                                            'rgba(75, 192, 192, 1)'
                                        ],
                                        borderWidth: 1
                                    }]
                                },
                                options: {
                                    scales: {
                                        yAxes: [{
                                            ticks: {
                                                beginAtZero: true
                                            }
                                        }]
                                    },
                                    legend: {
                                        display: false
                                    },
                                    tooltips: {
                                        callbacks: {
                                            label: function(tooltipItem) {
                                                return tooltipItem.yLabel;
                                            }
                                        }
                                    }
                                }
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div> <!-- / .row -->
    </div> <!-- / .container -->

{% endblock %}
